#操作远程仓库
git remote set-url --delete nami_test http.*
git remote set-url --add nami_test http://192.168.200.3/chenfeng/LearnGit.git
git remote show origin 显示远程分支等情况

#获取commit id
git rev-parse head
git rev-parse --short head

#版本回退
add后回退
git reset --hard head
git reset --hard commit id
git reflog
撤销所有修改
git checkout .

#查看提交日志
git log --pretty=format:"%h %an %ad : %s" -n 5
git log --left-right dev...master 不知道谁提交的多谁提交的少，单纯想知道有什么不一样，再显示出每个提交是在哪个分支上
[alias]
    logf = log --pretty=format:'%h %an %ad : %s'
    logl = log --pretty=oneline 
    logg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
git config --global alias.logg "log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative"
git logg -n 10

#分支管理
git checkout -b dev origin/dev，作用是checkout远程的dev分支，在本地起名为dev分支，并切换到本地的dev分支
git fetch remote branch # 远程分支
git checkout remote/branch src/path # src目录下面的指定目录(没有src指定根目录) 

#本地提交并创建远程分支
git push origin local_branch:remote_branch
这个操作，local_branch必须为你本地存在的分支，remote_branch为远程分支，如果remote_branch不存在则会自动创建分支。
类似，git push origin :remote_branch，local_branch留空的话则是删除远程remote_branch分支。

#删除文件跟踪
git rm --cached 

